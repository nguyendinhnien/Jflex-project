/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vc;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author niennguyen
 */
public class VCCompilerGUI extends javax.swing.JFrame {
    
    /**
     * Creates new form VCCompilerGUI
     */
    public VCCompilerGUI() {
        initComponents();
        selectFile.setFileFilter(new TypeOfFile());
        selectFile.setDialogTitle("Browse VC file");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        pathFileTextBox = new javax.swing.JTextPane();
        lexiconButton = new javax.swing.JButton();
        forButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        orginalFile = new javax.swing.JTextArea();
        preButton = new javax.swing.JButton();
        browserButton = new javax.swing.JButton();
        tokenIdLabel = new javax.swing.JLabel();
        terminalLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lineLabel = new javax.swing.JLabel();
        columnLabel = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VC Compiler on Java");
        setLocationByPlatform(true);
        setResizable(false);

        jScrollPane1.setViewportView(pathFileTextBox);

        lexiconButton.setText("LEX");
        lexiconButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lexiconButtonActionPerformed(evt);
            }
        });

        forButton.setText("Forward token");
        forButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forButtonActionPerformed(evt);
            }
        });

        orginalFile.setColumns(20);
        orginalFile.setRows(5);
        jScrollPane4.setViewportView(orginalFile);

        preButton.setText("Previous token");
        preButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preButtonActionPerformed(evt);
            }
        });

        browserButton.setText("Browse");
        browserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browserButtonActionPerformed(evt);
            }
        });

        tokenIdLabel.setText("Token ID : ");

        terminalLabel.setText("Terminal :");

        valueLabel.setText("Value : ");

        jLabel4.setText("Position :");

        lineLabel.setText("Line: ");

        columnLabel.setText("Column:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lexiconButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(preButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(forButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(tokenIdLabel)
                                        .addGap(91, 91, 91))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(terminalLabel)
                                            .addComponent(valueLabel)
                                            .addComponent(jLabel4))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lineLabel)
                                    .addComponent(columnLabel))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lexiconButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(preButton)
                            .addComponent(forButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tokenIdLabel)
                        .addGap(35, 35, 35)
                        .addComponent(terminalLabel)
                        .addGap(18, 18, 18)
                        .addComponent(valueLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(lineLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(columnLabel))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lexiconButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lexiconButtonActionPerformed
        // TODO add your handling code here:
        inputFile = new File(pathFileTextBox.getText());
        if (inputFile.exists() == false) {
            orginalFile.setText("The path to .VC file was wrong !!! Check again !!!");
            return;
        }
        listSymbol = VCLexerExecute.execute(inputFile);       
    }//GEN-LAST:event_lexiconButtonActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void preButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preButtonActionPerformed
        // TODO add your handling code here:
        if (tokenId > 0) tokenId--;
        update();        
    }//GEN-LAST:event_preButtonActionPerformed

    private void browserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browserButtonActionPerformed
        // TODO add your handling code here:
        int val = selectFile.showOpenDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            try {
                inputFile = selectFile.getSelectedFile(); 
                pathFileTextBox.setText(inputFile.getPath());
                BufferedReader in = null;
                in = new BufferedReader(new FileReader(inputFile));
                String line = in.readLine();
                while (line != null) {
                    orginalFile.append(line + "\n");
                    line = in.readLine();
                }
            } catch (IOException ex) {
                Logger.getLogger(VCCompilerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            
        }
        
    }//GEN-LAST:event_browserButtonActionPerformed

    private void forButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forButtonActionPerformed
        // TODO add your handling code here:
        if (tokenId < listSymbol.size() - 1) tokenId++;
        update();
    }//GEN-LAST:event_forButtonActionPerformed

    private void update() {
        if (listSymbol == null || inputFile == null) return;
        Symbol currentSym = listSymbol.get(tokenId);
        tokenIdLabel.setText("Token ID : " + tokenId);
        terminalLabel.setText("Terminal : " + VCLexerExecute.getName(currentSym.sym));
        valueLabel.setText("Value : " + currentSym.value);
        lineLabel.setText("Line : " + currentSym.left);
        columnLabel.setText("Column : " + currentSym.right);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VCCompilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VCCompilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VCCompilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VCCompilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VCCompilerGUI().setVisible(true);
            }
        });
    }
    private javax.swing.JFileChooser selectFile = new javax.swing.JFileChooser();
    private File inputFile = null;
    private ArrayList<Symbol> listSymbol = new ArrayList();
    private int tokenId = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browserButton;
    private javax.swing.JLabel columnLabel;
    private javax.swing.JButton forButton;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton lexiconButton;
    private javax.swing.JLabel lineLabel;
    private javax.swing.JTextArea orginalFile;
    private javax.swing.JTextPane pathFileTextBox;
    private javax.swing.JButton preButton;
    private javax.swing.JLabel terminalLabel;
    private javax.swing.JLabel tokenIdLabel;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}

class TypeOfFile extends FileFilter {
    //Type of file that should be display in JFileChooser will be set here  
    //We choose to display only directory and text file  

    public boolean accept(File f) {
        return f.isDirectory() || f.getName().toLowerCase().endsWith(".vc");
    }

    //Set description for the type of file that should be display  
    public String getDescription() {
        return ".vc files";
    }    
}
